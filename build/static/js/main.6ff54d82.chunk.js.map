{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fetch","require","App","props","state","todolist","activeItem","id","title","compleated","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","deleteItem","strikeunstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","then","res","json","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","response","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","placeholder","type","map","index","onClick","startediting","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ff54d82.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst fetch = require('node-fetch');\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n      this.state = {\n        todolist:[],\n        activeItem:{\n          id:null,\n          title:'',\n          compleated:false,\n        },\n        editing:false,\n      }\n      this.fetchTasks = this.fetchTasks.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.getCookie = this.getCookie.bind(this)\n      this.deleteItem = this.deleteItem.bind(this)\n      this.strikeunstrike = this.strikeunstrike.bind(this)\n      \n  };\n\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n  componentWillMount(){\n    this.fetchTasks()\n  }\n \n  fetchTasks(){\n    console.log('fet')\n    fetch('http://127.0.0.1:8000/api/task-list/')\n    .then(res => res.json())\n    .then(json => this.setState({todolist:json}));\n      \n      \n  }\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    console.log('name:',name)\n    console.log('value:',value)\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    console.log('item:', this.state.activeItem)\n    var csrftoken = this.getCookie('csrftoken');\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n    if (this.state.editing ==true){\n      url = `http://127.0.0.1:8000/api/task-update/${ this.state.activeItem.id }/`\n      this.setState({\n        editing:false\n      })\n    }\n    fetch(url,{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem:{\n          id:null,\n          title:'',\n          compleated:false,\n        }\n      })\n    }).catch(function(error){\n      console.log('Error:',error)\n    })\n\n  }\n  startediting(task){\n    this.setState({\n      activeItem:task,\n      editing:true,\n    })\n  }\n\n  deleteItem(task){\n    var csrftoken = this.getCookie('csrftoken');\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`,{\n      method:'DELETE',\n      headers:{\n        'content-type':'application/json',\n        'X-CSRFToken':csrftoken\n      },\n    }).then((response) =>{\n      this.fetchTasks()\n    })\n  }\n\n  strikeunstrike(task){\n    var csrftoken = this.getCookie('csrftoken');\n    var url = `http://127.0.0.1:8000/api/task-update/${ task.id }/`\n    task.compleated = !task.compleated\n      fetch(url,{\n        method:'POST',\n        headers:{\n          'content-type':'application/json',\n          'X-CSRFToken':csrftoken\n        },\n        body:JSON.stringify({'compleated':task.compleated,'title':task.title})\n      }).then(() =>{\n        this.fetchTasks()\n      })\n\n    console.log('TASK:',task.compleated)\n  }\n  render(){\n    var tasks = this.state.todolist\n    var self = this\n    return(\n      <div className='container' >\n        <div id='task-container'>\n          <div id='form-wraper'>\n            <form id='form' onSubmit={this.handleSubmit}>\n              <div className='flex-wrapper'>\n                <div style={{flex:6}}>\n                    <input onChange={this.handleChange} id='title' className='form-control' value={this.state.activeItem.title} name='title' placeholder='Add Task'/>\n                </div>\n                <div style={{flex:1}}>\n                    <input id='submit' className='btn btn-warning' type='submit' name='add' />\n                </div>\n\n              </div>\n\n            </form>\n\n          </div>\n          <div id='list-wraper'>\n            {tasks.map(function(task, index){\n              return(\n                <div key={index} className='task-wrapper flex-wrapper'>\n                  <div onClick={() => self.strikeunstrike(task)} style={{flex:7}}>\n                    {task.compleated == false ? (\n                      <span>{task.title}</span>\n                    ):(\n                      <strike>{task.title}</strike>\n                    )}\n                    \n                  </div>\n                  <div style={{flex:1}}>\n                    <button onClick={()=> self.startediting(task)} className='btn btn-sm btn-outline-info'>Edit</button>\n                  </div>\n                  <div style={{flex:1}}>\n                    <button onClick={()=> self.deleteItem(task)} className='btn btn-sm btn-outline-dark'>-</button>\n                  </div>\n                </div>\n                  \n                \n              )\n            })}\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}